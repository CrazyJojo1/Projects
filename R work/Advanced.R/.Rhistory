axis.title.y = element_text(color = "Red", size=30),
axis.text.x = element_text(size=20),
axis.text.y = element_text(size=20),
legend.title = element_text(size = 30),
legend.text = element_text(size = 20),
legend.position = c(0,0))
#controlling the positioning of the legend
h +
xlab("Money Axis") +
ylab("Number of Movies") +
theme(axis.title.x = element_text(color = "DarkGreen",
size=30),
axis.title.y = element_text(color = "Red", size=30),
axis.text.x = element_text(size=20),
axis.text.y = element_text(size=20),
legend.title = element_text(size = 30),
legend.text = element_text(size = 20),
legend.position = c(0,1))
#controlling the positioning of the legend
h +
xlab("Money Axis") +
ylab("Number of Movies") +
theme(axis.title.x = element_text(color = "DarkGreen",
size=30),
axis.title.y = element_text(color = "Red", size=30),
axis.text.x = element_text(size=20),
axis.text.y = element_text(size=20),
legend.title = element_text(size = 30),
legend.text = element_text(size = 20),
legend.position = c(1,0))
#controlling the positioning of the legend
h +
xlab("Money Axis") +
ylab("Number of Movies") +
theme(axis.title.x = element_text(color = "DarkGreen",
size=30),
axis.title.y = element_text(color = "Red", size=30),
axis.text.x = element_text(size=20),
axis.text.y = element_text(size=20),
legend.title = element_text(size = 30),
legend.text = element_text(size = 20),
legend.position = c(1,1))
h +
xlab("Money Axis") +
ylab("Number of Movies") +
theme(axis.title.x = element_text(color = "DarkGreen",
size=30),
axis.title.y = element_text(color = "Red", size=30),
axis.text.x = element_text(size=20),
axis.text.y = element_text(size=20),
legend.title = element_text(size = 30),
legend.text = element_text(size = 20),
legend.position = c(1,1),
legend.justification = c(1,1))
#title formatting
#adding title
#add layer using ggtitle("name of the title")
h +
xlab("Money Axis") +
ylab("Number of Movies") +
ggtitle("Movie Budget Distribution")
#title formatting
#adding title
#add layer using ggtitle("name of the title")
h +
xlab("Money Axis") +
ylab("Number of Movies") +
ggtitle("Movie Budget Distribution") +
theme(axis.title.x = element_text(color = "DarkGreen",
size=30),
axis.title.y = element_text(color = "Red", size=30),
axis.text.x = element_text(size=20),
axis.text.y = element_text(size=20),
legend.title = element_text(size = 30),
legend.text = element_text(size = 20),
legend.position = c(1,1),
legend.justification = c(1,1))
h +
xlab("Money Axis") +
ylab("Number of Movies") +
ggtitle("Movie Budget Distribution") +
theme(axis.title.x = element_text(color = "DarkGreen",
size=30),
axis.title.y = element_text(color = "Red", size=30),
axis.text.x = element_text(size=20),
axis.text.y = element_text(size=20),
legend.title = element_text(size = 30),
legend.text = element_text(size = 20),
legend.position = c(1,1),
legend.justification = c(1,1),
plot.title = element_text(color="DarkBlue",
size=40,
family="Courier"))
h +
xlab("Money Axis") +
ylab("Number of Movies") +
ggtitle("Movie Budget Distribution") +
theme(axis.title.x = element_text(color = "DarkGreen",
size=30),
axis.title.y = element_text(color = "Red", size=30),
axis.text.x = element_text(size=20),
axis.text.y = element_text(size=20),
legend.title = element_text(size = 30),
legend.text = element_text(size = 20),
legend.position = c(1,1),
legend.justification = c(1,1),
plot.title = element_text(color="DarkBlue",
size=40,
family="Courier"))
h +
xlab("Money Axis") +
ylab("Number of Movies") +
ggtitle("Movie Budget Distribution") +
theme(axis.title.x = element_text(color = "DarkGreen",
size=30),
axis.title.y = element_text(color = "Red", size=30),
axis.text.x = element_text(size=20),
axis.text.y = element_text(size=20),
legend.title = element_text(size = 30),
legend.text = element_text(size = 20),
legend.position = c(0,0),
legend.justification = c(0,0),
plot.title = element_text(color="DarkBlue",
size=40,
family="Courier"))
h +
xlab("Money Axis") +
ylab("Number of Movies") +
ggtitle("Movie Budget Distribution") +
theme(axis.title.x = element_text(color = "DarkGreen",
size=30),
axis.title.y = element_text(color = "Red", size=30),
axis.text.x = element_text(size=20),
axis.text.y = element_text(size=20),
legend.title = element_text(size = 30),
legend.text = element_text(size = 20),
legend.position = c(1,1),
legend.justification = c(1,1),
plot.title = element_text(color="DarkBlue",
size=40,
family="Courier"))
#then pass that factor(column name) values to that column
#movies$Year <- factor(movies$Year)
#use levels(movies$Year) to get categorical data in that column
#or use str(data frame name)
#this will show you factor w/ n
str(movies)
#Problem:
#Chart has been created. However,
#the R code used to create the diagram is lost
#come-up with the code that will create the same plot
#............
getwd()
NewMovie <- read.csv("/Homework.Last/Section6-Homework-Data.csv")
NewMovie <- read.csv("Homework.Last/Section6-Homework-Data.csv")
NewMovie
#inspect the data
str(NewMovie)
NewMovie
#inspect the data
head(NewMovie)
#change column names
colnames(NewMovie) <- c("WeekDay","Director","Genre","MovieName","Release.Date","Studio",
"AdjustedGross$M","Budget$M","Gross$M","IMDB","MovieLens",
"Overseas$M","Overseas.Percent","Profit$M","Profit.Percent",
"Runtime","US$M","GrossUS.Percent")
#check colnames
str(NewMovie)
head(NewMovie)
tail(NewMovie)
summary(NewMovie)
NewMovieList <- read.csv("Homework.Last/Section6-Homework-Data.csv")
NewMovieList <- read.csv("Homework.Last/Section6-Homework-Data.csv")
#Problem:
#Chart has been created. However,
#the R code used to create the diagram is lost
#come-up with the code that will create the same plot
#............
getwd()
NewMovieList <- read.csv("Homework.Last/Section6-Homework-Data.csv")
#inspect the data
head(NewMovieList)
str(NewMovieList)
#change column names
colnames(NewMovieList) <- c("WeekDay","Director","Genre","MovieName","Release.Date","Studio",
"AdjustedGross$M","Budget$M","Gross$M","IMDB","MovieLens",
"Overseas$M","Overseas.Percent","Profit$M","Profit.Percent",
"Runtime","US$M","GrossUS.Percent")
#adjusated gross means gross adjusted for inflation
#inflation of ticket prices
#check colnames
str(NewMovieList)
head(NewMovieList)
tail(NewMovieList)
summary(NewMovieList)
#change column names
colnames(NewMovieList) <- c("WeekDay","Director","Genre","MovieName","Release.Date","Studio",
"AdjustedGross$M","Budget$M","Gross$M","IMDB.Rating","MovieLens.Rating",
"Overseas$M","Overseas%","Profit$M","Profit%",
"Runtime","US$M","Gross%US")
summary(NewMovieList)
#check colnames
str(NewMovieList)
#change column names
colnames(NewMovieList) <- c("WeekDay","Director","Genre","MovieName","Release.Date","Studio",
"AdjustedGross$M","Budget$M","Gross$M","IMDB.Rating","MovieLens.Rating",
"Overseas$M","Overseas.Percent","Profit$M","Profit.Percent",
"Runtime","US$M","GrossUS.Percent")
#building chart
#step1. data
a <- ggplot(data = NewMovieList, aes(x=Genre,y=GrossUS.Percent,
size=Budget$M))
summary(NewMovieList)
summary(NewMovieList)
#create factor
NewMovieList$Studio <- factor(NewMovieList$Studio)
NewMovieList$Genre <- factor(NewMovieList$Genre)
NewMovieList$WeekDay <- factor(NewMovieList$WeekDay)
#check structure and summary
str(NewMovieList)
#delete last column
NewMovieList$NA <- NA
summary(NewMovieList)
#filter the data frame based on studio
levels(NewMovieList$Studio)
FilteredList <- NewMovieList[NewMovieList$Studio==c("Buena Vista Studios","Fox",
"Paramount Pictures","Sony",
"Universal","WB"),]
FilteredList <- NewMovieList[NewMovieList$Studio=="Buena Vista Studios","Fox",
"Paramount Pictures","Sony",
"Universal","WB",]
FilteredList <- NewMovieList[NewMovieList$Studio==("Buena Vista Studios","Fox",
"Paramount Pictures","Sony",
"Universal","WB"),]
NewMovieList$Studio==("Buena Vista Studios","Fox",
"Paramount Pictures","Sony",
"Universal","WB")
NewMovieList$Studio=="Buena Vista Studios","Fox",
"Paramount Pictures","Sony",
"Universal","WB"
NewMovieList$Studio==c("Buena Vista Studios","Fox",
"Paramount Pictures","Sony",
"Universal","WB")
FilteredList <- NewMovieList[NewMovieList$Studio==c("Buena Vista Studios","Fox",
"Paramount Pictures","Sony",
"Universal","WB"),]
FilteredList
#check our filtered data frame
str(FilteredList)
levels(FilteredList$Studio)
#check our filtered data frame
str(FilteredList)
FilteredList <- NewMovieList[NewMovieList$Studio==c("Buena Vista Studios","Fox",
"Paramount Pictures","Sony",
"Universal","WB"),]
levels(FilteredList$Studio)
NewMovieList$Studio==c("Buena Vista Studios","Fox",
"Paramount Pictures","Sony",
"Universal","WB")
FilteredList
str(FilteredList)
str(NewMovieList)
NewMovieList$Studio==c("Buena Vista Studios","Fox",
"Paramount Pictures","Sony",
"Universal","WB")
FilteredList
#check our filtered data frame
str(FilteredList)
#building chart
#step1. data
a <- ggplot(data = NewMovieList, aes(x=Genre,y=GrossUS.Percent,
size=Budget$M,
color=Studio))
#add geometric layer to it
a + geom_jitter() +geom_boxplot(size=1.2,alpha=0.6)
#check our filtered data frame
str(FilteredList)
#building chart
#step1. data
a <- ggplot(data = FilteredList, aes(x=Genre,y=GrossUS.Percent,
size=Budget$M,
color=Studio))
#add geometric layer to it
a + geom_jitter() +geom_boxplot(size=1.2,alpha=0.6)
#building chart
#step1. data
a <- ggplot(data = FilteredList, aes(x=Genre,y=GrossUS.Percent,
#size=Budget$M,
color=Studio))
#add geometric layer to it
a + geom_jitter() +geom_boxplot(size=1.2,alpha=0.6)
#add geometric layer to it
a + geom_jitter() +geom_boxplot(size=1.2,alpha=0.6)
#add geometric layer to it
a + geom_point() +geom_boxplot(size=1.2,alpha=0.6)
NewMovieList <- read.csv("Homework.Last/Section6-Homework-Data.csv")
#change column names
colnames(NewMovieList) <- c("WeekDay","Director","Genre","MovieName","Release.Date","Studio",
"AdjustedGross$M","Budget$M","Gross$M","IMDB.Rating","MovieLens.Rating",
"Overseas$M","Overseas.Percent","Profit$M","Profit.Percent",
"Runtime","US$M","GrossUS.Percent")
#filter the data frame based on studio
levels(NewMovieList$Studio)
NewMovieList$Studio==c("Buena Vista Studios","Fox",
"Paramount Pictures","Sony",
"Universal","WB")
FilteredList <- NewMovieList[NewMovieList$Studio==c("Buena Vista Studios","Fox",
"Paramount Pictures","Sony",
"Universal","WB"),]
#building chart
#step1. data
a <- ggplot(data = FilteredList, aes(x=Genre,y=GrossUS.Percent,
#size=Budget$M,
color=Studio))
#add geometric layer to it
a + geom_point() +geom_boxplot(size=1.2,alpha=0.6)
#size=Budget$M,
#color=Studio))
#add geometric layer to it
a + geom_point() +geom_boxplot(size=1.2,alpha=0.6)
#size=Budget$M,
#color=Studio))
#add geometric layer to it
a + geom_point() +geom_boxplot(size=1.2,alpha=0.6)
#building chart
#step1. data
a <- ggplot(data = FilteredList, aes(x=Genre,y=GrossUS.Percent)
#size=Budget$M,
#color=Studio))
#add geometric layer to it
a + geom_point() +geom_boxplot(size=1.2,alpha=0.6)
#building chart
#step1. data
a <- ggplot(data = FilteredList, aes(x=Genre,y=GrossUS.Percent))
#size=Budget$M,
#color=Studio))
#add geometric layer to it
a + geom_point() +geom_boxplot(size=1.2,alpha=0.6)
FilteredList <- NewMovieList[NewMovieList$Studio==c("Buena Vista Studios","Fox",
"Paramount Pictures","Sony",
"Universal","WB")&NewMovieList$Genre==c("action","adventure","animation","comedy","drama"),]
FilteredList
NewMovieList <- read.csv("Homework.Last/Section6-Homework-Data.csv")
NewMovieList
#check our filtered data frame
str(FilteredList)
#building chart
#step1. data
a <- ggplot(data = FilteredList, aes(x=Genre,y=GrossUS.Percent))
#size=Budget$M,
#color=Studio))
#add geometric layer to it
a + geom_point() +geom_boxplot(size=1.2,alpha=0.6)
#building chart
#step1. data
a <- ggplot(data = FilteredList, aes(x=Genre,y=GrossUS.Percent,
#size=Budget$M,
color=Studio))
#add geometric layer to it
a + geom_point() +geom_boxplot(size=1.2,alpha=0.6)
#building chart
#step1. data
a <- ggplot(data = FilteredList, aes(x=Genre,y=GrossUS.Percent))
#size=Budget$M,
#color=Studio))
#add geometric layer to it
a + geom_point() +geom_boxplot(size=1.2,alpha=0.6)
#size=Budget$M,
#color=Studio))
#add geometric layer to it
a + geom_jitter() +geom_boxplot(size=1.2,alpha=0.6)
#size=Budget$M,
#color=Studio))
#add geometric layer to it
a + geom_jitter() +geom_boxplot(alpha=0.6)
FilteredList
FilteredList
#check our filtered data frame
summary(FilteredList)
#change column names
colnames(NewMovieList) <- c("WeekDay","Director","Genre","MovieName","Release.Date","Studio",
"AdjustedGrossMillion","BudgetMillion","GrossMillion","IMDB.Rating","MovieLens.Rating",
"OverseasMillion","Overseas.Percent","ProfitMillion","Profit.Percent",
"Runtime","US$M","GrossUS.Percent")
FilteredList <- NewMovieList[NewMovieList$Studio==c("Buena Vista Studios","Fox",
"Paramount Pictures","Sony",
"Universal","WB")&NewMovieList$Genre==c("action","adventure","animation","comedy","drama"),]
#check our filtered data frame
summary(FilteredList)
#building chart
#step1. data
a <- ggplot(data = FilteredList, aes(x=Genre,y=GrossUS.Percent,
size=BudgetMillion))
#color=Studio))
#add geometric layer to it
a + geom_jitter() +geom_boxplot(alpha=0.6)
FilteredList
FilteredList
help("print")
getwd()
setwd("./Advanced.R/Weather Data")
getwd()
?read.csv
Chicago <- read.csv("Chicago-F.csv",row.names = 1)
Chicago <- read.csv("Chicago-F.csv",row.names = 1)
Chicago
Chicago <- read.csv("Chicago-F.csv",row.names = 1)
?read.csv
Houston <- read.csv("Houston-F.csv",row.names = 1)
NewYork <- read.csv("NewYork-F.csv",row.names = 1)
SanFranciso <- read.csv("SanFranciso-F.csv",row.names = 1)
SanFrancisco <- read.csv("SanFrancisco-F.csv",row.names = 1)
Chicago
Houston
NewYork
SanFrancisco
#form a list named weather
Weather <- list(Chicago = Chicago,
Houston = Houston,
NewYork = NewYork,
SanFrancisco = SanFrancisco)
#check the list
Weather
#look at project file
getwd()
setwd("/Users/rajanbawa/Documents/R work/Advanced.R")
View("28.ProjectBrief.txt")
View(28.ProjectBrief.txt)
?view
?View
#nesting for loop
#A table showing the annual maximums of each observed metric for every city.
max(Chicago)
Chicago
#nesting for loop
#A table showing the annual maximums of each observed metric for every city.
max(Chicago[1,])
max(Weather$Chicago[1,])
max(Weather[[1]][1,])
max(Weather[[1]][0,])
max(Weather[[1]][1,])
Weather[[1]][1]
Weather[[1]][1,]
x <- list()
#step2 : nesting loops
for(i in 1:4){
for(j in 1:5){
x[[i]][j,] <- max(Weather[[i]][j,])
}
}
for(i in 1:4){
for(j in 1:5){
x[[i]][j,] <- max(Weather[[i]][j,])
}
i <- i+1
}
x <- list()
#step2 : nesting loops
for(i in 1:4){
for(j in 1:5){
x[[i]][j,] <- max(Weather[[i]][j,])
i <- i+1
}
}
for(i in 1:4){
for(j in 1:5){
x[[i]][j,] <- max(Weather[[i]][j,])
}
}
#try for loop
#step1 :initialisation
?list
x[[i]][j,] <- max(Weather[[i]][j,]);
for(i in 1:4){
for(j in 1:5){
max(Weather[[i]][j,])
}
}
for(i in 1:4){
for(j in 1:5){
print(max(Weather[[i]][j,]))
}
}
#compare
sapply(Weather, function(a) apply(a,1,max))
#compare
x <- sapply(Weather, function(a) apply(a,1,max))
x[1,]
y <- list()
or(i in 1:4){
for(j in 1:5){
y[[i]][j,]   <- (max(Weather[[i]][j,]))
}
}
y <- list()
#step2 : nesting loops
for(i in 1:4){
for(j in 1:5){
y[[i]][j,]   <- max(Weather[[i]][j,])
}
}
Weather[[1]][1,1]
y <- list()
#step2 : nesting loops
for(i in 1:4){
for(j in 1:5){
y[[i]][i,j]   <- max(Weather[[i]][j,])
}
}
#compare
x <- lapply(Weather, function(a) apply(a,1,max))
x
