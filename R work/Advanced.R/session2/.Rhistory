axis.text.x = element_text(size=20),
axis.text.y = element_text(size=20),
legend.title = element_text(size = 30),
legend.text = element_text(size = 20),
legend.position = c(1,-1))
#controlling the positioning of the legend
h +
xlab("Money Axis") +
ylab("Number of Movies") +
theme(axis.title.x = element_text(color = "DarkGreen",
size=30),
axis.title.y = element_text(color = "Red", size=30),
axis.text.x = element_text(size=20),
axis.text.y = element_text(size=20),
legend.title = element_text(size = 30),
legend.text = element_text(size = 20),
legend.position = c(0,0))
#controlling the positioning of the legend
h +
xlab("Money Axis") +
ylab("Number of Movies") +
theme(axis.title.x = element_text(color = "DarkGreen",
size=30),
axis.title.y = element_text(color = "Red", size=30),
axis.text.x = element_text(size=20),
axis.text.y = element_text(size=20),
legend.title = element_text(size = 30),
legend.text = element_text(size = 20),
legend.position = c(0,1))
#controlling the positioning of the legend
h +
xlab("Money Axis") +
ylab("Number of Movies") +
theme(axis.title.x = element_text(color = "DarkGreen",
size=30),
axis.title.y = element_text(color = "Red", size=30),
axis.text.x = element_text(size=20),
axis.text.y = element_text(size=20),
legend.title = element_text(size = 30),
legend.text = element_text(size = 20),
legend.position = c(1,0))
#controlling the positioning of the legend
h +
xlab("Money Axis") +
ylab("Number of Movies") +
theme(axis.title.x = element_text(color = "DarkGreen",
size=30),
axis.title.y = element_text(color = "Red", size=30),
axis.text.x = element_text(size=20),
axis.text.y = element_text(size=20),
legend.title = element_text(size = 30),
legend.text = element_text(size = 20),
legend.position = c(1,1))
h +
xlab("Money Axis") +
ylab("Number of Movies") +
theme(axis.title.x = element_text(color = "DarkGreen",
size=30),
axis.title.y = element_text(color = "Red", size=30),
axis.text.x = element_text(size=20),
axis.text.y = element_text(size=20),
legend.title = element_text(size = 30),
legend.text = element_text(size = 20),
legend.position = c(1,1),
legend.justification = c(1,1))
#title formatting
#adding title
#add layer using ggtitle("name of the title")
h +
xlab("Money Axis") +
ylab("Number of Movies") +
ggtitle("Movie Budget Distribution")
#title formatting
#adding title
#add layer using ggtitle("name of the title")
h +
xlab("Money Axis") +
ylab("Number of Movies") +
ggtitle("Movie Budget Distribution") +
theme(axis.title.x = element_text(color = "DarkGreen",
size=30),
axis.title.y = element_text(color = "Red", size=30),
axis.text.x = element_text(size=20),
axis.text.y = element_text(size=20),
legend.title = element_text(size = 30),
legend.text = element_text(size = 20),
legend.position = c(1,1),
legend.justification = c(1,1))
h +
xlab("Money Axis") +
ylab("Number of Movies") +
ggtitle("Movie Budget Distribution") +
theme(axis.title.x = element_text(color = "DarkGreen",
size=30),
axis.title.y = element_text(color = "Red", size=30),
axis.text.x = element_text(size=20),
axis.text.y = element_text(size=20),
legend.title = element_text(size = 30),
legend.text = element_text(size = 20),
legend.position = c(1,1),
legend.justification = c(1,1),
plot.title = element_text(color="DarkBlue",
size=40,
family="Courier"))
h +
xlab("Money Axis") +
ylab("Number of Movies") +
ggtitle("Movie Budget Distribution") +
theme(axis.title.x = element_text(color = "DarkGreen",
size=30),
axis.title.y = element_text(color = "Red", size=30),
axis.text.x = element_text(size=20),
axis.text.y = element_text(size=20),
legend.title = element_text(size = 30),
legend.text = element_text(size = 20),
legend.position = c(1,1),
legend.justification = c(1,1),
plot.title = element_text(color="DarkBlue",
size=40,
family="Courier"))
h +
xlab("Money Axis") +
ylab("Number of Movies") +
ggtitle("Movie Budget Distribution") +
theme(axis.title.x = element_text(color = "DarkGreen",
size=30),
axis.title.y = element_text(color = "Red", size=30),
axis.text.x = element_text(size=20),
axis.text.y = element_text(size=20),
legend.title = element_text(size = 30),
legend.text = element_text(size = 20),
legend.position = c(0,0),
legend.justification = c(0,0),
plot.title = element_text(color="DarkBlue",
size=40,
family="Courier"))
h +
xlab("Money Axis") +
ylab("Number of Movies") +
ggtitle("Movie Budget Distribution") +
theme(axis.title.x = element_text(color = "DarkGreen",
size=30),
axis.title.y = element_text(color = "Red", size=30),
axis.text.x = element_text(size=20),
axis.text.y = element_text(size=20),
legend.title = element_text(size = 30),
legend.text = element_text(size = 20),
legend.position = c(1,1),
legend.justification = c(1,1),
plot.title = element_text(color="DarkBlue",
size=40,
family="Courier"))
#then pass that factor(column name) values to that column
#movies$Year <- factor(movies$Year)
#use levels(movies$Year) to get categorical data in that column
#or use str(data frame name)
#this will show you factor w/ n
str(movies)
#Problem:
#Chart has been created. However,
#the R code used to create the diagram is lost
#come-up with the code that will create the same plot
#............
getwd()
NewMovie <- read.csv("/Homework.Last/Section6-Homework-Data.csv")
NewMovie <- read.csv("Homework.Last/Section6-Homework-Data.csv")
NewMovie
#inspect the data
str(NewMovie)
NewMovie
#inspect the data
head(NewMovie)
#change column names
colnames(NewMovie) <- c("WeekDay","Director","Genre","MovieName","Release.Date","Studio",
"AdjustedGross$M","Budget$M","Gross$M","IMDB","MovieLens",
"Overseas$M","Overseas.Percent","Profit$M","Profit.Percent",
"Runtime","US$M","GrossUS.Percent")
#check colnames
str(NewMovie)
head(NewMovie)
tail(NewMovie)
summary(NewMovie)
NewMovieList <- read.csv("Homework.Last/Section6-Homework-Data.csv")
NewMovieList <- read.csv("Homework.Last/Section6-Homework-Data.csv")
#Problem:
#Chart has been created. However,
#the R code used to create the diagram is lost
#come-up with the code that will create the same plot
#............
getwd()
NewMovieList <- read.csv("Homework.Last/Section6-Homework-Data.csv")
#inspect the data
head(NewMovieList)
str(NewMovieList)
#change column names
colnames(NewMovieList) <- c("WeekDay","Director","Genre","MovieName","Release.Date","Studio",
"AdjustedGross$M","Budget$M","Gross$M","IMDB","MovieLens",
"Overseas$M","Overseas.Percent","Profit$M","Profit.Percent",
"Runtime","US$M","GrossUS.Percent")
#adjusated gross means gross adjusted for inflation
#inflation of ticket prices
#check colnames
str(NewMovieList)
head(NewMovieList)
tail(NewMovieList)
summary(NewMovieList)
#change column names
colnames(NewMovieList) <- c("WeekDay","Director","Genre","MovieName","Release.Date","Studio",
"AdjustedGross$M","Budget$M","Gross$M","IMDB.Rating","MovieLens.Rating",
"Overseas$M","Overseas%","Profit$M","Profit%",
"Runtime","US$M","Gross%US")
summary(NewMovieList)
#check colnames
str(NewMovieList)
#change column names
colnames(NewMovieList) <- c("WeekDay","Director","Genre","MovieName","Release.Date","Studio",
"AdjustedGross$M","Budget$M","Gross$M","IMDB.Rating","MovieLens.Rating",
"Overseas$M","Overseas.Percent","Profit$M","Profit.Percent",
"Runtime","US$M","GrossUS.Percent")
#building chart
#step1. data
a <- ggplot(data = NewMovieList, aes(x=Genre,y=GrossUS.Percent,
size=Budget$M))
summary(NewMovieList)
summary(NewMovieList)
#create factor
NewMovieList$Studio <- factor(NewMovieList$Studio)
NewMovieList$Genre <- factor(NewMovieList$Genre)
NewMovieList$WeekDay <- factor(NewMovieList$WeekDay)
#check structure and summary
str(NewMovieList)
#delete last column
NewMovieList$NA <- NA
summary(NewMovieList)
#filter the data frame based on studio
levels(NewMovieList$Studio)
FilteredList <- NewMovieList[NewMovieList$Studio==c("Buena Vista Studios","Fox",
"Paramount Pictures","Sony",
"Universal","WB"),]
FilteredList <- NewMovieList[NewMovieList$Studio=="Buena Vista Studios","Fox",
"Paramount Pictures","Sony",
"Universal","WB",]
FilteredList <- NewMovieList[NewMovieList$Studio==("Buena Vista Studios","Fox",
"Paramount Pictures","Sony",
"Universal","WB"),]
NewMovieList$Studio==("Buena Vista Studios","Fox",
"Paramount Pictures","Sony",
"Universal","WB")
NewMovieList$Studio=="Buena Vista Studios","Fox",
"Paramount Pictures","Sony",
"Universal","WB"
NewMovieList$Studio==c("Buena Vista Studios","Fox",
"Paramount Pictures","Sony",
"Universal","WB")
FilteredList <- NewMovieList[NewMovieList$Studio==c("Buena Vista Studios","Fox",
"Paramount Pictures","Sony",
"Universal","WB"),]
FilteredList
#check our filtered data frame
str(FilteredList)
levels(FilteredList$Studio)
#check our filtered data frame
str(FilteredList)
FilteredList <- NewMovieList[NewMovieList$Studio==c("Buena Vista Studios","Fox",
"Paramount Pictures","Sony",
"Universal","WB"),]
levels(FilteredList$Studio)
NewMovieList$Studio==c("Buena Vista Studios","Fox",
"Paramount Pictures","Sony",
"Universal","WB")
FilteredList
str(FilteredList)
str(NewMovieList)
NewMovieList$Studio==c("Buena Vista Studios","Fox",
"Paramount Pictures","Sony",
"Universal","WB")
FilteredList
#check our filtered data frame
str(FilteredList)
#building chart
#step1. data
a <- ggplot(data = NewMovieList, aes(x=Genre,y=GrossUS.Percent,
size=Budget$M,
color=Studio))
#add geometric layer to it
a + geom_jitter() +geom_boxplot(size=1.2,alpha=0.6)
#check our filtered data frame
str(FilteredList)
#building chart
#step1. data
a <- ggplot(data = FilteredList, aes(x=Genre,y=GrossUS.Percent,
size=Budget$M,
color=Studio))
#add geometric layer to it
a + geom_jitter() +geom_boxplot(size=1.2,alpha=0.6)
#building chart
#step1. data
a <- ggplot(data = FilteredList, aes(x=Genre,y=GrossUS.Percent,
#size=Budget$M,
color=Studio))
#add geometric layer to it
a + geom_jitter() +geom_boxplot(size=1.2,alpha=0.6)
#add geometric layer to it
a + geom_jitter() +geom_boxplot(size=1.2,alpha=0.6)
#add geometric layer to it
a + geom_point() +geom_boxplot(size=1.2,alpha=0.6)
NewMovieList <- read.csv("Homework.Last/Section6-Homework-Data.csv")
#change column names
colnames(NewMovieList) <- c("WeekDay","Director","Genre","MovieName","Release.Date","Studio",
"AdjustedGross$M","Budget$M","Gross$M","IMDB.Rating","MovieLens.Rating",
"Overseas$M","Overseas.Percent","Profit$M","Profit.Percent",
"Runtime","US$M","GrossUS.Percent")
#filter the data frame based on studio
levels(NewMovieList$Studio)
NewMovieList$Studio==c("Buena Vista Studios","Fox",
"Paramount Pictures","Sony",
"Universal","WB")
FilteredList <- NewMovieList[NewMovieList$Studio==c("Buena Vista Studios","Fox",
"Paramount Pictures","Sony",
"Universal","WB"),]
#building chart
#step1. data
a <- ggplot(data = FilteredList, aes(x=Genre,y=GrossUS.Percent,
#size=Budget$M,
color=Studio))
#add geometric layer to it
a + geom_point() +geom_boxplot(size=1.2,alpha=0.6)
#size=Budget$M,
#color=Studio))
#add geometric layer to it
a + geom_point() +geom_boxplot(size=1.2,alpha=0.6)
#size=Budget$M,
#color=Studio))
#add geometric layer to it
a + geom_point() +geom_boxplot(size=1.2,alpha=0.6)
#building chart
#step1. data
a <- ggplot(data = FilteredList, aes(x=Genre,y=GrossUS.Percent)
#size=Budget$M,
#color=Studio))
#add geometric layer to it
a + geom_point() +geom_boxplot(size=1.2,alpha=0.6)
#building chart
#step1. data
a <- ggplot(data = FilteredList, aes(x=Genre,y=GrossUS.Percent))
#size=Budget$M,
#color=Studio))
#add geometric layer to it
a + geom_point() +geom_boxplot(size=1.2,alpha=0.6)
FilteredList <- NewMovieList[NewMovieList$Studio==c("Buena Vista Studios","Fox",
"Paramount Pictures","Sony",
"Universal","WB")&NewMovieList$Genre==c("action","adventure","animation","comedy","drama"),]
FilteredList
NewMovieList <- read.csv("Homework.Last/Section6-Homework-Data.csv")
NewMovieList
#check our filtered data frame
str(FilteredList)
#building chart
#step1. data
a <- ggplot(data = FilteredList, aes(x=Genre,y=GrossUS.Percent))
#size=Budget$M,
#color=Studio))
#add geometric layer to it
a + geom_point() +geom_boxplot(size=1.2,alpha=0.6)
#building chart
#step1. data
a <- ggplot(data = FilteredList, aes(x=Genre,y=GrossUS.Percent,
#size=Budget$M,
color=Studio))
#add geometric layer to it
a + geom_point() +geom_boxplot(size=1.2,alpha=0.6)
#building chart
#step1. data
a <- ggplot(data = FilteredList, aes(x=Genre,y=GrossUS.Percent))
#size=Budget$M,
#color=Studio))
#add geometric layer to it
a + geom_point() +geom_boxplot(size=1.2,alpha=0.6)
#size=Budget$M,
#color=Studio))
#add geometric layer to it
a + geom_jitter() +geom_boxplot(size=1.2,alpha=0.6)
#size=Budget$M,
#color=Studio))
#add geometric layer to it
a + geom_jitter() +geom_boxplot(alpha=0.6)
FilteredList
FilteredList
#check our filtered data frame
summary(FilteredList)
#change column names
colnames(NewMovieList) <- c("WeekDay","Director","Genre","MovieName","Release.Date","Studio",
"AdjustedGrossMillion","BudgetMillion","GrossMillion","IMDB.Rating","MovieLens.Rating",
"OverseasMillion","Overseas.Percent","ProfitMillion","Profit.Percent",
"Runtime","US$M","GrossUS.Percent")
FilteredList <- NewMovieList[NewMovieList$Studio==c("Buena Vista Studios","Fox",
"Paramount Pictures","Sony",
"Universal","WB")&NewMovieList$Genre==c("action","adventure","animation","comedy","drama"),]
#check our filtered data frame
summary(FilteredList)
#building chart
#step1. data
a <- ggplot(data = FilteredList, aes(x=Genre,y=GrossUS.Percent,
size=BudgetMillion))
#color=Studio))
#add geometric layer to it
a + geom_jitter() +geom_boxplot(alpha=0.6)
FilteredList
FilteredList
help("print")
.13*20000
21/12
.05*20,000
.05*20000
.01*20000
200*60
32000
x <- list(1:3,matrix(nrow=2,ncol=10),rep(4,times=3))
x
rm(x)
x <- list(1:3,matrix(nrow=2,ncol=10),rep(4,times=3))
x
#list component indexation
x[1]
source("~/.active-rstudio-document", echo=TRUE)
x[2]
x <- list(1:3,matrix(nrow=2,ncol=10),rep(4,times=3))
x[2]
x[3]
#to obtain the object present in the list
x[[1]]
x[[2]]
#remember: apply family function are acting on the list objects
y <- list(0,0)
x[[1]] <- x[[1]] *2
y[[1]] <- x[[1]] *2
y <- list(0,0)
for(i in 1:2){
y[[1]] <- x[[1]] *2
}
y
y <- list(0,0)
for(i in 1:2){
y[[i]] <- x[[1]] *2
}
y
#inorder to work on list objects ...
#you can use square brackets
#or
#you can use their name with $ sign
#naming
names(x) <- c("i","am","idiot")
x
x$i
x$am
x$idiot
x <- list(vector=1:3,matrix=matrix(nrow=2,ncol=10),vector2=rep(4,times=3))
x
#to add or delete the list
x$vector3 <-1:10
x
x[[5]] <"Hello"
x[5] <"Hello"
x
x[[5]] <-"Hello"
x
names(x[5]) <- "character"
x
x[[6]] <-"Hello"
x
x[[6]] <-NULL
x
names(x)[5] <- "character"
x
x[5] <- NULL
x
x$character <- "Hello"
x
x[[5]] <- NULL
x
#to access the list components
x
x[c(1,4)]
x[1:2]
x[1]
x[-4]
x[c(-2,-4)]
x[c(1,4)]<- NULL
#to access the list components
x
x
summary(x)
x[[1:2]]
x[1:2]
x[1]
is.list(x[1])
x[[1]]
is.list(x[[1]])
is.matrix(x[[1]])
x$fuck <- "I am ready"
x
x[[3]] <- NULL
x$fuck <- "I am ready"
x
x[3] <- NULL
x
#subsetting
x
x$fuck <- "I am ready"
x
y <- x[1:2]
y
