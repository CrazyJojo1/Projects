size=30),
axis.title.y = element_text(color = "Red", size=30),
axis.text.x = element_text(size=20),
axis.text.y = element_text(size=20),
legend.title = element_text(size = 30),
legend.text = element_text(size = 20),
legend.position = c(-1,1))
#controlling the positioning of the legend
h +
xlab("Money Axis") +
ylab("Number of Movies") +
theme(axis.title.x = element_text(color = "DarkGreen",
size=30),
axis.title.y = element_text(color = "Red", size=30),
axis.text.x = element_text(size=20),
axis.text.y = element_text(size=20),
legend.title = element_text(size = 30),
legend.text = element_text(size = 20),
legend.position = c(-1,-1))
#controlling the positioning of the legend
h +
xlab("Money Axis") +
ylab("Number of Movies") +
theme(axis.title.x = element_text(color = "DarkGreen",
size=30),
axis.title.y = element_text(color = "Red", size=30),
axis.text.x = element_text(size=20),
axis.text.y = element_text(size=20),
legend.title = element_text(size = 30),
legend.text = element_text(size = 20),
legend.position = c(1,-1))
#controlling the positioning of the legend
h +
xlab("Money Axis") +
ylab("Number of Movies") +
theme(axis.title.x = element_text(color = "DarkGreen",
size=30),
axis.title.y = element_text(color = "Red", size=30),
axis.text.x = element_text(size=20),
axis.text.y = element_text(size=20),
legend.title = element_text(size = 30),
legend.text = element_text(size = 20),
legend.position = c(0,0))
#controlling the positioning of the legend
h +
xlab("Money Axis") +
ylab("Number of Movies") +
theme(axis.title.x = element_text(color = "DarkGreen",
size=30),
axis.title.y = element_text(color = "Red", size=30),
axis.text.x = element_text(size=20),
axis.text.y = element_text(size=20),
legend.title = element_text(size = 30),
legend.text = element_text(size = 20),
legend.position = c(0,1))
#controlling the positioning of the legend
h +
xlab("Money Axis") +
ylab("Number of Movies") +
theme(axis.title.x = element_text(color = "DarkGreen",
size=30),
axis.title.y = element_text(color = "Red", size=30),
axis.text.x = element_text(size=20),
axis.text.y = element_text(size=20),
legend.title = element_text(size = 30),
legend.text = element_text(size = 20),
legend.position = c(1,0))
#controlling the positioning of the legend
h +
xlab("Money Axis") +
ylab("Number of Movies") +
theme(axis.title.x = element_text(color = "DarkGreen",
size=30),
axis.title.y = element_text(color = "Red", size=30),
axis.text.x = element_text(size=20),
axis.text.y = element_text(size=20),
legend.title = element_text(size = 30),
legend.text = element_text(size = 20),
legend.position = c(1,1))
h +
xlab("Money Axis") +
ylab("Number of Movies") +
theme(axis.title.x = element_text(color = "DarkGreen",
size=30),
axis.title.y = element_text(color = "Red", size=30),
axis.text.x = element_text(size=20),
axis.text.y = element_text(size=20),
legend.title = element_text(size = 30),
legend.text = element_text(size = 20),
legend.position = c(1,1),
legend.justification = c(1,1))
#title formatting
#adding title
#add layer using ggtitle("name of the title")
h +
xlab("Money Axis") +
ylab("Number of Movies") +
ggtitle("Movie Budget Distribution")
#title formatting
#adding title
#add layer using ggtitle("name of the title")
h +
xlab("Money Axis") +
ylab("Number of Movies") +
ggtitle("Movie Budget Distribution") +
theme(axis.title.x = element_text(color = "DarkGreen",
size=30),
axis.title.y = element_text(color = "Red", size=30),
axis.text.x = element_text(size=20),
axis.text.y = element_text(size=20),
legend.title = element_text(size = 30),
legend.text = element_text(size = 20),
legend.position = c(1,1),
legend.justification = c(1,1))
h +
xlab("Money Axis") +
ylab("Number of Movies") +
ggtitle("Movie Budget Distribution") +
theme(axis.title.x = element_text(color = "DarkGreen",
size=30),
axis.title.y = element_text(color = "Red", size=30),
axis.text.x = element_text(size=20),
axis.text.y = element_text(size=20),
legend.title = element_text(size = 30),
legend.text = element_text(size = 20),
legend.position = c(1,1),
legend.justification = c(1,1),
plot.title = element_text(color="DarkBlue",
size=40,
family="Courier"))
h +
xlab("Money Axis") +
ylab("Number of Movies") +
ggtitle("Movie Budget Distribution") +
theme(axis.title.x = element_text(color = "DarkGreen",
size=30),
axis.title.y = element_text(color = "Red", size=30),
axis.text.x = element_text(size=20),
axis.text.y = element_text(size=20),
legend.title = element_text(size = 30),
legend.text = element_text(size = 20),
legend.position = c(1,1),
legend.justification = c(1,1),
plot.title = element_text(color="DarkBlue",
size=40,
family="Courier"))
h +
xlab("Money Axis") +
ylab("Number of Movies") +
ggtitle("Movie Budget Distribution") +
theme(axis.title.x = element_text(color = "DarkGreen",
size=30),
axis.title.y = element_text(color = "Red", size=30),
axis.text.x = element_text(size=20),
axis.text.y = element_text(size=20),
legend.title = element_text(size = 30),
legend.text = element_text(size = 20),
legend.position = c(0,0),
legend.justification = c(0,0),
plot.title = element_text(color="DarkBlue",
size=40,
family="Courier"))
h +
xlab("Money Axis") +
ylab("Number of Movies") +
ggtitle("Movie Budget Distribution") +
theme(axis.title.x = element_text(color = "DarkGreen",
size=30),
axis.title.y = element_text(color = "Red", size=30),
axis.text.x = element_text(size=20),
axis.text.y = element_text(size=20),
legend.title = element_text(size = 30),
legend.text = element_text(size = 20),
legend.position = c(1,1),
legend.justification = c(1,1),
plot.title = element_text(color="DarkBlue",
size=40,
family="Courier"))
#then pass that factor(column name) values to that column
#movies$Year <- factor(movies$Year)
#use levels(movies$Year) to get categorical data in that column
#or use str(data frame name)
#this will show you factor w/ n
str(movies)
#Problem:
#Chart has been created. However,
#the R code used to create the diagram is lost
#come-up with the code that will create the same plot
#............
getwd()
NewMovie <- read.csv("/Homework.Last/Section6-Homework-Data.csv")
NewMovie <- read.csv("Homework.Last/Section6-Homework-Data.csv")
NewMovie
#inspect the data
str(NewMovie)
NewMovie
#inspect the data
head(NewMovie)
#change column names
colnames(NewMovie) <- c("WeekDay","Director","Genre","MovieName","Release.Date","Studio",
"AdjustedGross$M","Budget$M","Gross$M","IMDB","MovieLens",
"Overseas$M","Overseas.Percent","Profit$M","Profit.Percent",
"Runtime","US$M","GrossUS.Percent")
#check colnames
str(NewMovie)
head(NewMovie)
tail(NewMovie)
summary(NewMovie)
NewMovieList <- read.csv("Homework.Last/Section6-Homework-Data.csv")
NewMovieList <- read.csv("Homework.Last/Section6-Homework-Data.csv")
#Problem:
#Chart has been created. However,
#the R code used to create the diagram is lost
#come-up with the code that will create the same plot
#............
getwd()
NewMovieList <- read.csv("Homework.Last/Section6-Homework-Data.csv")
#inspect the data
head(NewMovieList)
str(NewMovieList)
#change column names
colnames(NewMovieList) <- c("WeekDay","Director","Genre","MovieName","Release.Date","Studio",
"AdjustedGross$M","Budget$M","Gross$M","IMDB","MovieLens",
"Overseas$M","Overseas.Percent","Profit$M","Profit.Percent",
"Runtime","US$M","GrossUS.Percent")
#adjusated gross means gross adjusted for inflation
#inflation of ticket prices
#check colnames
str(NewMovieList)
head(NewMovieList)
tail(NewMovieList)
summary(NewMovieList)
#change column names
colnames(NewMovieList) <- c("WeekDay","Director","Genre","MovieName","Release.Date","Studio",
"AdjustedGross$M","Budget$M","Gross$M","IMDB.Rating","MovieLens.Rating",
"Overseas$M","Overseas%","Profit$M","Profit%",
"Runtime","US$M","Gross%US")
summary(NewMovieList)
#check colnames
str(NewMovieList)
#change column names
colnames(NewMovieList) <- c("WeekDay","Director","Genre","MovieName","Release.Date","Studio",
"AdjustedGross$M","Budget$M","Gross$M","IMDB.Rating","MovieLens.Rating",
"Overseas$M","Overseas.Percent","Profit$M","Profit.Percent",
"Runtime","US$M","GrossUS.Percent")
#building chart
#step1. data
a <- ggplot(data = NewMovieList, aes(x=Genre,y=GrossUS.Percent,
size=Budget$M))
summary(NewMovieList)
summary(NewMovieList)
#create factor
NewMovieList$Studio <- factor(NewMovieList$Studio)
NewMovieList$Genre <- factor(NewMovieList$Genre)
NewMovieList$WeekDay <- factor(NewMovieList$WeekDay)
#check structure and summary
str(NewMovieList)
#delete last column
NewMovieList$NA <- NA
summary(NewMovieList)
#filter the data frame based on studio
levels(NewMovieList$Studio)
FilteredList <- NewMovieList[NewMovieList$Studio==c("Buena Vista Studios","Fox",
"Paramount Pictures","Sony",
"Universal","WB"),]
FilteredList <- NewMovieList[NewMovieList$Studio=="Buena Vista Studios","Fox",
"Paramount Pictures","Sony",
"Universal","WB",]
FilteredList <- NewMovieList[NewMovieList$Studio==("Buena Vista Studios","Fox",
"Paramount Pictures","Sony",
"Universal","WB"),]
NewMovieList$Studio==("Buena Vista Studios","Fox",
"Paramount Pictures","Sony",
"Universal","WB")
NewMovieList$Studio=="Buena Vista Studios","Fox",
"Paramount Pictures","Sony",
"Universal","WB"
NewMovieList$Studio==c("Buena Vista Studios","Fox",
"Paramount Pictures","Sony",
"Universal","WB")
FilteredList <- NewMovieList[NewMovieList$Studio==c("Buena Vista Studios","Fox",
"Paramount Pictures","Sony",
"Universal","WB"),]
FilteredList
#check our filtered data frame
str(FilteredList)
levels(FilteredList$Studio)
#check our filtered data frame
str(FilteredList)
FilteredList <- NewMovieList[NewMovieList$Studio==c("Buena Vista Studios","Fox",
"Paramount Pictures","Sony",
"Universal","WB"),]
levels(FilteredList$Studio)
NewMovieList$Studio==c("Buena Vista Studios","Fox",
"Paramount Pictures","Sony",
"Universal","WB")
FilteredList
str(FilteredList)
str(NewMovieList)
NewMovieList$Studio==c("Buena Vista Studios","Fox",
"Paramount Pictures","Sony",
"Universal","WB")
FilteredList
#check our filtered data frame
str(FilteredList)
#building chart
#step1. data
a <- ggplot(data = NewMovieList, aes(x=Genre,y=GrossUS.Percent,
size=Budget$M,
color=Studio))
#add geometric layer to it
a + geom_jitter() +geom_boxplot(size=1.2,alpha=0.6)
#check our filtered data frame
str(FilteredList)
#building chart
#step1. data
a <- ggplot(data = FilteredList, aes(x=Genre,y=GrossUS.Percent,
size=Budget$M,
color=Studio))
#add geometric layer to it
a + geom_jitter() +geom_boxplot(size=1.2,alpha=0.6)
#building chart
#step1. data
a <- ggplot(data = FilteredList, aes(x=Genre,y=GrossUS.Percent,
#size=Budget$M,
color=Studio))
#add geometric layer to it
a + geom_jitter() +geom_boxplot(size=1.2,alpha=0.6)
#add geometric layer to it
a + geom_jitter() +geom_boxplot(size=1.2,alpha=0.6)
#add geometric layer to it
a + geom_point() +geom_boxplot(size=1.2,alpha=0.6)
NewMovieList <- read.csv("Homework.Last/Section6-Homework-Data.csv")
#change column names
colnames(NewMovieList) <- c("WeekDay","Director","Genre","MovieName","Release.Date","Studio",
"AdjustedGross$M","Budget$M","Gross$M","IMDB.Rating","MovieLens.Rating",
"Overseas$M","Overseas.Percent","Profit$M","Profit.Percent",
"Runtime","US$M","GrossUS.Percent")
#filter the data frame based on studio
levels(NewMovieList$Studio)
NewMovieList$Studio==c("Buena Vista Studios","Fox",
"Paramount Pictures","Sony",
"Universal","WB")
FilteredList <- NewMovieList[NewMovieList$Studio==c("Buena Vista Studios","Fox",
"Paramount Pictures","Sony",
"Universal","WB"),]
#building chart
#step1. data
a <- ggplot(data = FilteredList, aes(x=Genre,y=GrossUS.Percent,
#size=Budget$M,
color=Studio))
#add geometric layer to it
a + geom_point() +geom_boxplot(size=1.2,alpha=0.6)
#size=Budget$M,
#color=Studio))
#add geometric layer to it
a + geom_point() +geom_boxplot(size=1.2,alpha=0.6)
#size=Budget$M,
#color=Studio))
#add geometric layer to it
a + geom_point() +geom_boxplot(size=1.2,alpha=0.6)
#building chart
#step1. data
a <- ggplot(data = FilteredList, aes(x=Genre,y=GrossUS.Percent)
#size=Budget$M,
#color=Studio))
#add geometric layer to it
a + geom_point() +geom_boxplot(size=1.2,alpha=0.6)
#building chart
#step1. data
a <- ggplot(data = FilteredList, aes(x=Genre,y=GrossUS.Percent))
#size=Budget$M,
#color=Studio))
#add geometric layer to it
a + geom_point() +geom_boxplot(size=1.2,alpha=0.6)
FilteredList <- NewMovieList[NewMovieList$Studio==c("Buena Vista Studios","Fox",
"Paramount Pictures","Sony",
"Universal","WB")&NewMovieList$Genre==c("action","adventure","animation","comedy","drama"),]
FilteredList
NewMovieList <- read.csv("Homework.Last/Section6-Homework-Data.csv")
NewMovieList
#check our filtered data frame
str(FilteredList)
#building chart
#step1. data
a <- ggplot(data = FilteredList, aes(x=Genre,y=GrossUS.Percent))
#size=Budget$M,
#color=Studio))
#add geometric layer to it
a + geom_point() +geom_boxplot(size=1.2,alpha=0.6)
#building chart
#step1. data
a <- ggplot(data = FilteredList, aes(x=Genre,y=GrossUS.Percent,
#size=Budget$M,
color=Studio))
#add geometric layer to it
a + geom_point() +geom_boxplot(size=1.2,alpha=0.6)
#building chart
#step1. data
a <- ggplot(data = FilteredList, aes(x=Genre,y=GrossUS.Percent))
#size=Budget$M,
#color=Studio))
#add geometric layer to it
a + geom_point() +geom_boxplot(size=1.2,alpha=0.6)
#size=Budget$M,
#color=Studio))
#add geometric layer to it
a + geom_jitter() +geom_boxplot(size=1.2,alpha=0.6)
#size=Budget$M,
#color=Studio))
#add geometric layer to it
a + geom_jitter() +geom_boxplot(alpha=0.6)
FilteredList
FilteredList
#check our filtered data frame
summary(FilteredList)
#change column names
colnames(NewMovieList) <- c("WeekDay","Director","Genre","MovieName","Release.Date","Studio",
"AdjustedGrossMillion","BudgetMillion","GrossMillion","IMDB.Rating","MovieLens.Rating",
"OverseasMillion","Overseas.Percent","ProfitMillion","Profit.Percent",
"Runtime","US$M","GrossUS.Percent")
FilteredList <- NewMovieList[NewMovieList$Studio==c("Buena Vista Studios","Fox",
"Paramount Pictures","Sony",
"Universal","WB")&NewMovieList$Genre==c("action","adventure","animation","comedy","drama"),]
#check our filtered data frame
summary(FilteredList)
#building chart
#step1. data
a <- ggplot(data = FilteredList, aes(x=Genre,y=GrossUS.Percent,
size=BudgetMillion))
#color=Studio))
#add geometric layer to it
a + geom_jitter() +geom_boxplot(alpha=0.6)
FilteredList
FilteredList
help("print")
.13*20000
21/12
.05*20,000
.05*20000
.01*20000
200*60
32000
1000000/35000
reticulate::repl_python()
y <- 1:10
y[1]
y[-1]
y
y[c(-1,-3,-8)]
y[1] <- 4
y
?seq()
seq(1,10)
seq(1,10,2)
letter
letters
LETTERS
7.5-4.26
3.24/4.26
3.24/7.5
20000 *69
R_vector_numeric = c(2,3,5,6,9,10)
R_vector_numeric
R_vector_char = c("Hello", "mister","how","are", "you")
R_vector_char
22*9.18*9
1817.64/4
R_vector_numeric = c(2,3,5,6,9,10)
R_vector_numeric[1]
R_vector_numeric[-1]
1:10
y<- 1:10
?random normal distribution
?rnorm
rnorm(2)
100000000/40
2500000/12
x <- 1:5
y <- 5 : 10
rbind(x,y)
y <- 6 : 10
rbind(x,y)
matric(x)
matrix(x)
x <- 1:15
matrix(x)
matrix(x,nrow=5,ncol=3)
matrix(x,nrow=5,ncol=3,byrow = T)
72000*3
40000000000/216000
6000*12
72000*4
40000000000/288000
4000000*72000
100/1.25
print("Hello")
reticulate::repl_python()
2021- 304
22500*.4
.6/5
4.4/5
.123*68.5
68.5/.12
68.5/12.3
1000*68.4
842* 5
843-187
195/1050
151-18
75/1000000
75/10000
